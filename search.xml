<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2024/03/06/gfnzy/"/>
      <url>/2024/03/06/gfnzy/</url>
      
        <content type="html"><![CDATA[<h1 id="GFNzy-package"><a href="#GFNzy-package" class="headerlink" title="GFNzy package"></a>GFNzy package</h1><h3 id="function"><a href="#function" class="headerlink" title="function"></a>function</h3><pre class="line-numbers language-none"><code class="language-none">```{R}function(data_list, traits, formula_list, XYZ_list=NA, predict_val=NA, exclude=NULL, csv.file=NA, pdf.file=NA, slice_at=NA, fit.resolution=101, no.cols=256, nlev=8, include_se=F, markers=NA, scale_surface=NA, cex.axis=2, labels_list=XYZ_list, cex.lab=2, direction=1, method.fit="GCV.Cp")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Visualization-tools"><a href="#Visualization-tools" class="headerlink" title="Visualization tools"></a>Visualization tools</h3><p>x-axis   y-axis    z-xis </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Learn SAS</title>
      <link href="/2023/10/05/sas/"/>
      <url>/2023/10/05/sas/</url>
      
        <content type="html"><![CDATA[<h2 id="SAS基础"><a href="#SAS基础" class="headerlink" title="SAS基础"></a>SAS基础</h2><h3 id="sas基础结构：DATA-PROC-（使用增强型编译器）"><a href="#sas基础结构：DATA-PROC-（使用增强型编译器）" class="headerlink" title="sas基础结构：DATA + PROC （使用增强型编译器）"></a>sas基础结构：DATA + PROC （使用增强型编译器）</h3><ul><li><p>DATA：DATA开始，创建、修改数据集。不仅sas程序是逐行执行的，DATA步的数据集也是逐个观测执行DATA步，没有错误写入写数据集后再处理下一观测</p></li><li><p>PROC：PROC，分析数据，产生结果</p></li><li><p>逻辑库： work是默认逻辑库，一般数据集其实是<code>work.数据集</code>，创建数据集时不指定逻辑库就会放在这个临时存储位置，结束会删除。</p></li><li><p>特殊步骤： options是更改系统设置的语句，通常写在程序最前面，并且后续options会覆盖之前的options语句</p></li></ul><h3 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h3><ol><li>sas有内置表编辑器，在tools工具栏中，可以直接编辑数据或者设置列属性</li><li>通过菜单栏导入数据集或者从其它软件导入</li><li>指定数据集位置<ol><li>内部数据：在sas中输入原始数据，用<code>datalines</code>或者<code>cards</code>表示，它们必须在data步最后一条语句，因为<code>datalines</code>后的所有行都会被视为内部数据，直到下一个分号。<code>input</code>在这之前</li><li>外部数据： <code>infile</code>指示文件位置，<code>input</code>在这之后。默认记录长度不超过256个字符，使用<code>lrecl=</code>可以指定字符长度</li></ol></li></ol><h3 id="数据的基本格式"><a href="#数据的基本格式" class="headerlink" title="数据的基本格式"></a>数据的基本格式</h3><pre class="line-numbers language-SAS" data-language="SAS"><code class="language-SAS">INPUT $informatw.  informatw.d   informatw.;run;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>上面分别对应字符、数值、日期型变量的一般类型。其中<code>$</code>指示字符型变量，<code>format</code>指示输入格式，<code>w</code>指示总长度，<code>d</code>指示小数位数。<code>.</code>是重要的组成，没有会被认为是变量名。<br><img src="variable.png" height="700px"></p>]]></content>
      
      
      
        <tags>
            
            <tag> sas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn CDISC</title>
      <link href="/2023/01/05/cdisc/"/>
      <url>/2023/01/05/cdisc/</url>
      
        <content type="html"><![CDATA[<h2 id="CDISC"><a href="#CDISC" class="headerlink" title="CDISC"></a>CDISC</h2><h4 id="四期临床实验"><a href="#四期临床实验" class="headerlink" title="四期临床实验"></a>四期临床实验</h4><ol><li>考虑药物的安全性和可耐受剂量，招募健康人群，主要进行药代动力学分析，70%进入下期</li><li>考虑药物安全性和有效性，招募几十人进行临床试验，33%进入下一期</li><li>考虑药物安全性和有效性，比起2期人数更多，70%进入下一期</li><li>药物进入市场后的分析，主要是考虑到临床实验不能涵盖特殊人群，70-90%不会召回</li></ol><h4 id="临床试验的参与者："><a href="#临床试验的参与者：" class="headerlink" title="临床试验的参与者："></a>临床试验的参与者：</h4><ol><li>sponsor: 制药公司，需要提供预临床实验的安全性和有效性等，需要提供数据库</li><li>CRO (contract research organization)：负责数据处理，SAP的实施，数据传输</li><li>site: 医院保健机构，负责患者的招入随访</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>learn r for ggplot theory</title>
      <link href="/2021/01/05/learnr4ds/"/>
      <url>/2021/01/05/learnr4ds/</url>
      
        <content type="html"><![CDATA[<h1 id="R4ds-ggplot-mag"><a href="#R4ds-ggplot-mag" class="headerlink" title="R4ds ggplot [:mag:]"></a>R4ds ggplot [<span class="github-emoji"><span>🔍</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f50d.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>]</h1><ul><li><p><a href="#ggplot">ggplot</a></p></li><li><p><a href="#%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2">数据转换</a></p></li><li><p><a href="#%E6%95%B0%E6%8D%AE%E6%8E%A2%E7%B4%A2%E5%88%86%E6%9E%90">数据探索分析</a></p></li></ul><h2 id="ggplot"><a href="#ggplot" class="headerlink" title="ggplot"></a>ggplot</h2><p>ggplot<strong>分层</strong>绘图的七个参数</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">ggplot<span class="token punctuation">(</span>data <span class="token operator">=</span> <span class="token operator">&lt;</span>data<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">+</span>    geom_<span class="token operator">&lt;</span><span class="token keyword">function</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>        mapping <span class="token operator">=</span> <span class="token operator">&lt;</span>mapping<span class="token operator">&gt;</span><span class="token punctuation">,</span>        stat <span class="token operator">=</span> <span class="token operator">&lt;</span>stat<span class="token operator">&gt;</span><span class="token punctuation">,</span>        postion <span class="token operator">=</span> <span class="token operator">&lt;</span>postion<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">+</span>    coord_<span class="token operator">&lt;</span><span class="token keyword">function</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>    facet_<span class="token operator">&lt;</span><span class="token keyword">function</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>position</code>: 位置参数，三种<code>fill</code>, <code>identity</code>, <code>dodge</code>对应堆叠、精确重叠对象分组<br><code>facet</code>: 分面，facet_wrap | facet_grid,需要用到函数指明分面变量<br><code>coord</code>:坐标系，常见的 coord_flip | coord_polar</p></blockquote><h2 id="数据转换"><a href="#数据转换" class="headerlink" title="数据转换"></a>数据转换</h2><p>!!!note 由于对于浮点数的存储并不能达到无限精度，所以 1/49*49 == 1 这种判断结果为 F，此时需要用到 near(x,y)函数</p><ol><li>filter 子集化，注意比较和逻辑运算符，注意<code>%in%</code>的使用。其中<code>xor()</code>对应的是<code>(x &amp; !y) &amp; (y &amp; !x)</code> <img src="Boolean.png" alt="布尔运算"><ul><li>filter 函数计算时并不会纳入 NA，所以 filter(.data,is.NA(cond)|cond)</li></ul></li><li>缺失值 NA：要正确明白其是未知数，但 NA^0 = 1,NA &amp; T = T，NA + 1 = NA.同时也要注意<code>lapply</code>`apply`和其的联用</li><li>arrange():缺失值一直排在末尾</li><li>select():选择变量，注意与 starts_with(),contains(),matchs(),all_of(),one_of()和 everything()调换顺序等联用</li><li>summarise()与 group_by()和 ungroup()联用分或者取消分组计算结果</li><li>reshape::melt(id = )和 dcast(~)分别融合和重塑数据，melt 需要将非融合变量放入 id 变量中，dcast 公式左边是 id 右边是融合的变量。tidy 包中的函数时 pivot_longer()和 pivot_wider()<br>1.separate()用于拆分变量，重要变量 sep，拆分后的变量类型会变化，可设置 convert = true 参数，unite()用于合并变量</li></ol><h2 id="数据探索分析"><a href="#数据探索分析" class="headerlink" title="数据探索分析"></a>数据探索分析</h2><p><code>.</code>和<code>.data</code>:在绘图和管道等操作中可以用.data 和.来代替数据集</p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>tibble 格式相对于数据框格式有显示类型和不会强制转换因子等优点</p><ol><li>数字:parse 相对于 as 有许多优点，比如对于’$22%’字符串转换，as 会报错，parse 则会忽视数字前方的非数字，并且对于 12，100 这些其他计数方式，parse 也能设置 locale 参数处理</li></ol><h2 id="模型构建"><a href="#模型构建" class="headerlink" title="模型构建"></a>模型构建</h2><ol><li>模型公式中 x^2 也需要加 I()转换符，要不然会直接当成 x</li><li>模型正交多项式可以帮助简化多项式，模型构建一样，但是参数不同</li><li>data_grid()和 seq_range()能分别处理类别重复变量和连续变量，生成的变量能用于模型的预测，同时参数 trim 和 expand 对于拖尾数据等也有较好效果</li><li>add-predictions、gather_predictions 和 spread_predictions 都能根据模型增加预测值(残差)，但是后两者是针对多个模型，常见新的模型变量，方便绘图比较<ul><li>多项式回归：poly(x,degree),注意数据外推</li><li>样条回归：需要用到 spline 包，ns()，geom_line()加线条时，需要指定 aes(y = pred)</li></ul></li><li>model_matrix()能显示模型构建中的细节，如样条</li></ol><p>!!!note 循环变量命名中，不能用赋值符号，需要用到 assign，如 assign(paste0(‘mod’,i),model)<br>r 中的 lm 函数会直接将多因子变量转换为哑变量进行分析</p><ul><li><p>回归的种类</p><ol><li>glm:广义线性模型，普通的线性模型要求响应值是连续的，并且要求误差项呈正态分布。广义线性模型拓展了响应值的类型，并且对距离的度量是根据似然来估计</li><li>mgcv::gam：拓展 glm，使其能包含任意的平滑函数，后续加上一定的约束平滑项</li><li>glmnet:glmnet：惩罚线性回归使用最大似然估计，在线性模型(logistic,cox 等都能用）中加入惩罚项，如 lasso，岭回归等</li><li>MASS::rlm:稳健回归，适合处理异常值</li><li>rpart:rpart():回归树，分段的常数模型，常常需要搭配先验知识(prior)</li></ol></li></ul><h2 id="生存分析"><a href="#生存分析" class="headerlink" title="生存分析"></a>生存分析</h2><h3 id="生存数据"><a href="#生存数据" class="headerlink" title="生存数据"></a>生存数据</h3><p>$(t_i,\delta_i)$是生存数据的形式，t 是删失和最后随访时间，δ 是 0/1 变量，0 = censored， 1 = event。在 r 中用 Surv(time,status)表示生成生存数据</p>]]></content>
      
      
      
        <tags>
            
            <tag> code </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
